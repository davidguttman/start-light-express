This file is a merged representation of a subset of the codebase, containing files not matching ignore patterns, combined into a single document by Repomix.

<file_summary>
This section contains a summary of this file.

<purpose>
This file contains a packed representation of a subset of the repository's contents that is considered the most important context.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.
</purpose>

<file_format>
The content is organized as follows:
1. This summary section
2. Repository information
3. Directory structure
4. Repository files (if enabled)
5. Multiple file entries, each consisting of:
  - File path as an attribute
  - Full contents of the file
</file_format>

<usage_guidelines>
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.
</usage_guidelines>

<notes>
- Some files may have been excluded based on .gitignore rules and Repomix's configuration
- Binary files are not included in this packed representation. Please refer to the Repository Structure section for a complete list of file paths, including binary files
- Files matching these patterns are excluded: client/style/tachyons.js, client/style/loaders.js
- Files matching patterns in .gitignore are excluded
- Files matching default ignore patterns are excluded
- Files are sorted by Git change count (files with more changes are at the bottom)
</notes>

</file_summary>

<directory_structure>
client/
  style/
    index.js
  index.js
  state.js
  welcome.js
package.json
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="client/style/index.js">
const insert = require('insert-css')

require('./tachyons')
require('./loaders')

insert(`
  body {
    background: #1c1c1c
  }

  .ball-scale-ripple-multiple > div {
    border-color: #ff41b4;
    border-radius: 0;
    transform: scale(3);
  }
`)
</file>

<file path="client/index.js">
require('./style')
const hash = require('http-hash')()

const welcome = require('./welcome')

document.title = 'Frustration Free'

hash.set('/', welcome)
hash.set('/welcome/:name', welcome)

window.addEventListener('hashchange', function () {
  window.location.reload()
})

const route = hash.get(window.location.hash.slice(1))
const el = route.handler({ ...route.params, splat: route.splat })

document.body.appendChild(el)
</file>

<file path="client/state.js">
const set = require('lodash.set')
const Emitter = require('wildemitter')

module.exports = function createState () {
  return new Emitter()
}

Emitter.prototype.set = function (path, value) {
  if (typeof path === 'object') {
    return Object.keys(path).map(k => this.set(k, path[k]))
  }

  set(this, path, value)
  this.emit(path, value)
  return value
}
</file>

<file path="client/welcome.js">
const html = require('nanohtml')
const morph = require('nanomorph')

const state = require('./state')()

module.exports = function ({ name }) {
  const tree = render()
  state.on('*', key => morph(tree, render()))
  state.set({ name })
  return tree
}

function render () {
  return html`
    <div>
      <div class='sans-serif white-90 vh-100 dt w-100'>
        <div class='f1 dtc v-mid tc ph3 ph5-l'>
          Hello${state.name ? ` ${state.name}` : ''}!
        </div>
      </div>
    </div>
  `
}
</file>

<file path="package.json">
{
  "name": "frustration-free",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "start": "budo client/index.js --live -d dist",
    "build": "browserify client/index.js | terser -mc > dist/index.js"
  },
  "keywords": [],
  "author": "David Guttman <david@guttman.io> (http://davidguttman.com/)",
  "license": "MIT",
  "dependencies": {
    "debug": "^4.3.4",
    "http-hash": "^2.0.1",
    "insert-css": "^2.0.0",
    "lodash.get": "^4.4.2",
    "lodash.set": "^4.3.2",
    "nanohtml": "^1.10.0",
    "nanomorph": "^5.4.3",
    "url-parse": "^1.5.10",
    "wildemitter": "^1.2.1"
  },
  "devDependencies": {
    "browserify": "^17.0.0",
    "budo": "^11.7.0",
    "standard": "^17.0.0",
    "terser": "^5.13.1"
  }
}
</file>

</files>
